/* tslint:disable */
/* eslint-disable */
/**
 * Vecto API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vecto.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Modality } from './Modality';
import {
    ModalityFromJSON,
    ModalityFromJSONTyped,
    ModalityToJSON,
} from './Modality';

/**
 * 
 * @export
 * @interface LookupRequest
 */
export interface LookupRequest {
    /**
     * 
     * @type {Modality}
     * @memberof LookupRequest
     */
    modality?: Modality;
    /**
     * The nth nearest index to the query
     * @type {number}
     * @memberof LookupRequest
     */
    topK?: number;
    /**
     * 
     * @type {any}
     * @memberof LookupRequest
     */
    query?: any;
    /**
     * Optional list of ids to specify a query subset
     * @type {Array<number>}
     * @memberof LookupRequest
     */
    ids?: Array<number>;
}

/**
 * Check if a given object implements the LookupRequest interface.
 */
export function instanceOfLookupRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LookupRequestFromJSON(json: any): LookupRequest {
    return LookupRequestFromJSONTyped(json, false);
}

export function LookupRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): LookupRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'modality': !exists(json, 'modality') ? undefined : ModalityFromJSON(json['modality']),
        'topK': !exists(json, 'top_k') ? undefined : json['top_k'],
        'query': !exists(json, 'query') ? undefined : json['query'],
        'ids': !exists(json, 'ids') ? undefined : json['ids'],
    };
}

export function LookupRequestToJSON(value?: LookupRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'modality': ModalityToJSON(value.modality),
        'top_k': value.topK,
        'query': value.query,
        'ids': value.ids,
    };
}


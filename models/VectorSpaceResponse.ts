/* tslint:disable */
/* eslint-disable */
/**
 * Vecto API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vecto.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModelInformation } from './ModelInformation';
import {
    ModelInformationFromJSON,
    ModelInformationFromJSONTyped,
    ModelInformationToJSON,
} from './ModelInformation';

/**
 * 
 * @export
 * @interface VectorSpaceResponse
 */
export interface VectorSpaceResponse {
    /**
     * 
     * @type {number}
     * @memberof VectorSpaceResponse
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof VectorSpaceResponse
     */
    name?: string;
    /**
     * 
     * @type {ModelInformation}
     * @memberof VectorSpaceResponse
     */
    model?: ModelInformation;
}

/**
 * Check if a given object implements the VectorSpaceResponse interface.
 */
export function instanceOfVectorSpaceResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VectorSpaceResponseFromJSON(json: any): VectorSpaceResponse {
    return VectorSpaceResponseFromJSONTyped(json, false);
}

export function VectorSpaceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): VectorSpaceResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'model': !exists(json, 'model') ? undefined : ModelInformationFromJSON(json['model']),
    };
}

export function VectorSpaceResponseToJSON(value?: VectorSpaceResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'model': ModelInformationToJSON(value.model),
    };
}


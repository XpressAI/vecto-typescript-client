/* tslint:disable */
/* eslint-disable */
/**
 * Vecto API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vecto.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenResponse
 */
export interface TokenResponse {
    /**
     * 
     * @type {number}
     * @memberof TokenResponse
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TokenResponse
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenResponse
     */
    tokenType?: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof TokenResponse
     */
    vectorSpaceIds?: Array<number>;
    /**
     * 
     * @type {boolean}
     * @memberof TokenResponse
     */
    allVectorSpaces?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof TokenResponse
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the TokenResponse interface.
 */
export function instanceOfTokenResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TokenResponseFromJSON(json: any): TokenResponse {
    return TokenResponseFromJSONTyped(json, false);
}

export function TokenResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'tokenType': !exists(json, 'tokenType') ? undefined : json['tokenType'],
        'vectorSpaceIds': !exists(json, 'vectorSpaceIds') ? undefined : json['vectorSpaceIds'],
        'allVectorSpaces': !exists(json, 'allVectorSpaces') ? undefined : json['allVectorSpaces'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
    };
}

export function TokenResponseToJSON(value?: TokenResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'tokenType': value.tokenType,
        'vectorSpaceIds': value.vectorSpaceIds,
        'allVectorSpaces': value.allVectorSpaces,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
    };
}

